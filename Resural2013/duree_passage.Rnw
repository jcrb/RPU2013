% duree_passage.Rnw

La durée de passage est le temps compris entre la date d'entrée et celle de sortie. Il s'agit d'une durée de transit total. Les données transmises par les RPU ne permettent pas de calculer les temps d'attenre.

<<passage,echo=FALSE>>=
#'@param e date entrée 
#'@param s date de sortie
#'@param limite min(date:heure)pour l'année courante. Toutes les dates inférieures à limite sont transformée en NA.
#'@param sel$p s-e temps de présence en minutes
#'@details on fait un test avec Sélestat

sel<-d1[d1$FINESS=="Sel",c("ENTREE","SORTIE","AGE","GRAVITE","ORIENTATION","DESTINATION")]
e<-ymd_hms(sel$ENTREE)
s<-ymd_hms(sel$SORTIE)
limite<-ymd_hms("2013-01-01 00:00:00")
s[s < limite]<-ymd_hms("na")
sel$p<-as.numeric(s-e)
summary(sel$p)
hist(as.numeric(sel$p),xlab="temps de passage (mn)",main="Histogramme du temps de passage (tous patients)")
@


% RPU_2013_analyse à partir de la ligne 382

\section*{Selon l'heure}

Une période de 24 heures est habituellement divisée de la manière suivante:
\begin{enumerate}
  \item \emph{journée} de 8 heures à 20 heures
  \item \emph{soirée} de 20 heures à minuit
  \item  \emph{nuit profonde} de 0 heures à 8 heures
\end{enumerate}

<<duree_heure,echo=FALSE>>=
periode<-cut(hour(sel$ENTREE),breaks=c(0,8,20,24),labels=c("nuit profonde","journée","soirée"))
summary(periode)
barplot(summary(periode),main="Passages selon la période de la journée")
tapply(sel$p,periode,mean,na.rm=TRUE)
boxplot(sel$p~periode,main="Durée de passage selon la période de la journée")
@


\section*{Selon l'âge}

Le temps de passage augmente avec l'age.
<<duree_age,echo=FALSE>>=
#'@details utilisation de cut et split pour former des groupes d'age. CUT divise un groupe e valeurs x en différents intervalles. L'intervalle le plus à gauche correspond au niveau 1. Par défaut les intervalles sont fermés à droite.

tranche_age<-cut(sel$AGE,breaks=c(0,15,75,max(sel$AGE)),labels=c("15 ans et moins","16 à 74 ans","75 ans et plus"))
summary(tranche_age)
tapply(sel$p,tranche_age,mean,na.rm=TRUE)
boxplot(sel$p~tranche_age,ylab="Temps (en mn)",main="Durée de passage en fonction de l'age",col="yellow")
@

\section*{Selon le jour de la semaine}
<<duree_semaine,echo=FALSE>>=
tapply(sel$p,wday(e,label=TRUE),mean,na.rm=TRUE)

# selon le jour et la période
t<-table(periode,wday(e,label=TRUE))
t
@

\subsection*{Pourcentage de passages en moins de 4 heures par établissement}

<<moins_4h,echo=FALSE>>=
#'@param h4 quatre heures = 240 minutes
#'@param a durées de présence qui sont différentes de NA
#'@param n nombre de durées de présence qui sont différentes de NA
#'@param p proportion de durée de passage < 4 heures

h4<-240
a<-sel$p[!is.na(sel$p)]
n<-length(a)
m4<-a[a<h4]
b<-length(m4)
p<-round(b*100/n,2)
@
\Sexpr{p}\% des patients quittent les urgences en moins de quatre heures.

\section*{Selon l'orientation}
<<duree_orientation,echo=FALSE>>=
tapply(sel$p,sel$ORIENTATION,mean,na.rm=TRUE)

#'@details on transdorme les NA en DOM pour meurer le temps moyen si retour à domicile. On fait l'hypothèse que NA = dom.
sel$DESTINATION<-as.character(sel$DESTINATION)
sel$DESTINATION[is.na(sel$DESTINATION)]<-"DOM"
tapply(sel$p,sel$DESTINATION,mean,na.rm=TRUE)
@


\section*{Selon la gravité}
<<duree_gravite,echo=FALSE>>=
tapply(sel$p,sel$GRAVITE,mean,na.rm=TRUE)
@

\section*{Selon la structure}
\subsection{CH Sélestat}
<<duree_structure,echo=FALSE>>=
summary(sel$p)
@
